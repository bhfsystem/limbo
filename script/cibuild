#!/usr/bin/env bash

function docker_stuff {
  if ! docker pull ubuntu >/dev/null 2>&1; then
    return
  fi

  # ensure bind is listening on eth1
  sudo aptitude install -y bind9
  sudo service bind9 restart

  # get docker0 up
  cat | sudo tee -a /etc/default/docker <<"__EOF"
DOCKER_OPTS="--dns $(ip route show | awk '$3 == "eth1" { print $NF }') -H tcp://0.0.0.0: --storage-driver=devicemapper"
__EOF
  sudo restart docker || sudo start docker
  sleep 10

  docker tag ubuntu:latest ubuntu:packer-input

  # configure routing
  echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward  
  echo "net.ipv4.ip_forward=1" | sudo tee /etc/sysctl.d/60-ip-forward.conf
}

function git_stuff {
  # initialize new ssh hosts
  ssh -oStrictHostKeyChecking=no github.com true &
  ssh -oStrictHostKeyChecking=no bitbucket.org true &
  ssh -oStrictHostKeyChecking=no localhost true &
  wait
}

function home_stuff {
  local git_home="$1"; shift

  # clone home
  if [[ ! -d .git ]]; then
    git clone "$git_home" home
    mv home/.git . || rm -rf home/.git
  fi
  
  git reset --hard
  git clean -fd
  git pull

  set +x; 
  source script/ciprofile
  set -x
}

function app_stuff {
  # bootstrap app
  git clone git@github.com:defn/app work/app || true
  pushd work/app
  git pull
  script/bootstrap
  set +x; source script/profile; require; set -x
  popd
}

function cache_stuff {
  export BASEBOX_CACHE="/vagrant"
}

function fully_source {
  set +x; require; set -x
}

function main {
  set -x; cd

  # setup
  cache_stuff
  git_stuff
  home_stuff "$@"
  app_stuff

  # bootstrap dependencies
  app clone
  app runmany 8 'cd $1 && git pull'
  app bootstrap

  # fully source home
  fully_source

  # bootstrap docker
  docker_stuff
}

exec 2>&1
main "$@" | tee -a cibuild.log
