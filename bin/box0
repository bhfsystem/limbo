#!/usr/bin/env bash

export VAGRANT_DEFAULT_PROVIDER="docker"

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"

  export VAGRANT_CWD="$shome"

  if [[ "$#" == 0 ]]; then
    echo "$(basename "$0"): up|destroy ssh|rsync|scp id media rebuild build|remove"
    return 0
  fi

  local nm_guest="$(basename "$0")"
  local nm_action="$1"; shift

  case "$(uname -s)" in
    Darwin)
      case "$nm_action" in
        ssh)
          ${BOX_NAME} ssh -t "$nm_guest $nm_action $*"
          ;;
        *)
          ${BOX_NAME} ssh "source .bash_profile; require; $nm_guest $nm_action $*"
          ;;
      esac
      return $?
      ;;
  esac

  local nm_provider='docker'

  case "$nm_action" in
    media)
      if [[ "$nm_guest" == "${BOX_NAME}0" ]]; then
        docker pull ubuntu:latest
      else
        docker commit "$(${BOX_NAME}0 id)" ubuntu:vagrant
      fi
      ;;
    add)
      if [[ "$nm_guest" == "${BOX_NAME}0" ]]; then
        docker commit $($nm_guest id) ubuntu:vagrant
      else
        true
      fi
      ;;
    remove)
      if [[ "$nm_guest" == "${BOX_NAME}0" ]]; then
        docker rmi ubuntu:vagrant
      else
      "$nm_guest" destroy -f
      fi
      ;;
    up)
      parity "$nm_action" "$nm_guest" "$@"
      ;;
    destroy)
      vagrant "$nm_action" "$nm_guest" "$@"
      ;;
    ssh|rsync|scp)
      parity "$nm_action" "$nm_guest" "$@"
      ;;
    id)
      cat "$(set +f; ls -td "$VAGRANT_CWD/.vagrant/machines/$nm_guest"/*/id | head -1)"; echo
      ;;
    rebuild)
      "$nm_guest" remove >/dev/null 2>&1 || true
      "$nm_guest" build
      "$nm_guest" add
      ;;
    build)
      "$nm_guest" destroy -f
      if [[ -n "${1:-}" ]]; then
        export IMAGE="$1"; shift
      fi
      "$nm_guest" up
      ;;
    *)
      vagrant "$nm_action" "$nm_guest" "$@"
      ;;
  esac
}

source sub "$BASH_SOURCE" "$@"
